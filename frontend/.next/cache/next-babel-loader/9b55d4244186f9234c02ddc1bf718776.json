{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/beach-cleanup/frontend/context/UserContext.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, createContext } from \"react\";\nimport axios from \"axios\";\nexport var UserContext = /*#__PURE__*/createContext(undefined);\nexport var UserContextProvider = /*#__PURE__*/function (_Component) {\n  _inherits(UserContextProvider, _Component);\n\n  var _super = _createSuper(UserContextProvider);\n\n  function UserContextProvider() {\n    _classCallCheck(this, UserContextProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UserContextProvider, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$axios$post, data, userData;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(localStorage.getItem(\"userData\") === null)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 3;\n                return axios.post(\"\".concat(process.env.NEXT_PUBLIC_HOST, \"/auth/local\"), {\n                  identifier: \"dummy@gmail.com\",\n                  password: \"123456789\"\n                });\n\n              case 3:\n                _yield$axios$post = _context.sent;\n                data = _yield$axios$post.data;\n                localStorage.setItem(\"userData\", data);\n                this.setState(data);\n                _context.next = 12;\n                break;\n\n              case 9:\n                userData = localStorage.getItem(\"userData\");\n                _context.next = 12;\n                return axios.post(\"\".concat(process.env.NEXT_PUBLIC_HOST, \"/auth/local\"), {\n                  identifier: userData.user.email\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n        value: this.state,\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return UserContextProvider;\n}(Component);","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/beach-cleanup/frontend/context/UserContext.js"],"names":["React","Component","createContext","axios","UserContext","undefined","UserContextProvider","localStorage","getItem","post","process","env","NEXT_PUBLIC_HOST","identifier","password","data","setItem","setState","userData","user","email","state","props","children"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,gBAAGF,aAAa,CAACG,SAAD,CAAjC;AAEP,WAAaC,mBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEQC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,IAF7C;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAG6BL,KAAK,CAACM,IAAN,WAClBC,OAAO,CAACC,GAAR,CAAYC,gBADM,kBAErB;AACEC,kBAAAA,UAAU,EAAE,iBADd;AAEEC,kBAAAA,QAAQ,EAAE;AAFZ,iBAFqB,CAH7B;;AAAA;AAAA;AAGcC,gBAAAA,IAHd,qBAGcA,IAHd;AAUMR,gBAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAiCD,IAAjC;AACA,qBAAKE,QAAL,CAAcF,IAAd;AAXN;AAAA;;AAAA;AAaYG,gBAAAA,QAbZ,GAauBX,YAAY,CAACC,OAAb,CAAqB,UAArB,CAbvB;AAAA;AAAA,uBAcYL,KAAK,CAACM,IAAN,WAAcC,OAAO,CAACC,GAAR,CAAYC,gBAA1B,kBAAyD;AAC7DC,kBAAAA,UAAU,EAAEK,QAAQ,CAACC,IAAT,CAAcC;AADmC,iBAAzD,CAdZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAoBW;AACP,0BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE,KAAKC,KAAlC;AAAA,kBACG,KAAKC,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AA1BH;;AAAA;AAAA,EAAyCtB,SAAzC","sourcesContent":["import React, { Component, createContext } from \"react\";\nimport axios from \"axios\";\n\nexport const UserContext = createContext(undefined);\n\nexport class UserContextProvider extends Component {\n  async componentWillMount() {\n    if (localStorage.getItem(\"userData\") === null) {\n      const { data } = await axios.post(\n        `${process.env.NEXT_PUBLIC_HOST}/auth/local`,\n        {\n          identifier: \"dummy@gmail.com\",\n          password: \"123456789\",\n        }\n      );\n      localStorage.setItem(\"userData\", data);\n      this.setState(data);\n    } else {\n      const userData = localStorage.getItem(\"userData\");\n      await axios.post(`${process.env.NEXT_PUBLIC_HOST}/auth/local`, {\n        identifier: userData.user.email,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <UserContext.Provider value={this.state}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}