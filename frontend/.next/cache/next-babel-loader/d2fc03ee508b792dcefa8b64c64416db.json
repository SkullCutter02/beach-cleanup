{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/beach-cleanup/frontend/context/CountryContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from \"react\";\nexport const CountryContext = /*#__PURE__*/createContext(undefined);\nexport class CountryContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      storeCountry: country => this.setState(_objectSpread(_objectSpread({}, state), {}, {\n        country\n      }))\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CountryContext.Provider, {\n      value: this.state,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/beach-cleanup/frontend/context/CountryContext.js"],"names":["React","Component","createContext","CountryContext","undefined","CountryContextProvider","storeCountry","country","setState","state","render","props","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,cAAc,gBAAGD,aAAa,CAACE,SAAD,CAApC;AAEP,OAAO,MAAMC,sBAAN,SAAqCJ,SAArC,CAA+C;AAAA;AAAA;;AAAA,mCAC5C;AACNK,MAAAA,YAAY,EAAGC,OAAD,IAAa,KAAKC,QAAL,iCAAmBC,KAAnB;AAA0BF,QAAAA;AAA1B;AADrB,KAD4C;AAAA;;AAKpDG,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,KAAKD,KAArC;AAAA,gBACG,KAAKE,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAXmD","sourcesContent":["import React, { Component, createContext } from \"react\";\n\nexport const CountryContext = createContext(undefined);\n\nexport class CountryContextProvider extends Component {\n  state = {\n    storeCountry: (country) => this.setState({ ...state, country }),\n  };\n\n  render() {\n    return (\n      <CountryContext.Provider value={this.state}>\n        {this.props.children}\n      </CountryContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}