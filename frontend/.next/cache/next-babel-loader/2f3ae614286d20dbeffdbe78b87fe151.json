{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/beach-cleanup/frontend/pages/results/index.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport { CountryContext } from \"../../context/CountryContext\";\n\nconst Results = () => {\n  const router = useRouter();\n  const country = useContext(CountryContext);\n  const {\n    0: state,\n    1: setState\n  } = useState([]);\n  fetch(\"http://localhost:1337/hostings\").then(res => res.json()).then(data => setState(data.filter(hosting => hosting.country.toLowerCase() === country.country.toLowerCase()))).catch(err => console.log(err));\n  useEffect(() => {\n    if (state !== null && state.length === 0) {\n      alert(`No beach cleanups found for ${country.country}`);\n      router.push(\"/\");\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: state === undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : state.map(hosting => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", hosting.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", `${hosting.day}th ${hosting.month} ${hosting.year}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", hosting.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Remarks: \", hosting.remarks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Country: \", hosting.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Results;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/beach-cleanup/frontend/pages/results/index.js"],"names":["React","useContext","useState","useEffect","useRouter","Layout","CountryContext","Results","router","country","state","setState","fetch","then","res","json","data","filter","hosting","toLowerCase","catch","err","console","log","length","alert","push","undefined","map","location","day","month","year","description","remarks"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,cAAT,QAA+B,8BAA/B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,OAAO,GAAGR,UAAU,CAACK,cAAD,CAA1B;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAU,EAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IACJL,QAAQ,CACNK,IAAI,CAACC,MAAL,CACGC,OAAD,IACEA,OAAO,CAACT,OAAR,CAAgBU,WAAhB,OAAkCV,OAAO,CAACA,OAAR,CAAgBU,WAAhB,EAFtC,CADM,CAHZ,EAUGC,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACc,MAAN,KAAiB,CAAvC,EAA0C;AACxCC,MAAAA,KAAK,CAAE,+BAA8BhB,OAAO,CAACA,OAAQ,EAAhD,CAAL;AACAD,MAAAA,MAAM,CAACkB,IAAP,CAAY,GAAZ;AACD;AACF,GALQ,EAKN,CAAChB,KAAD,CALM,CAAT;AAOA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,MAAD;AAAA,gBACGA,KAAK,KAAKiB,SAAV,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAGCjB,KAAK,CAACkB,GAAN,CAAWV,OAAD,iBACR;AAAA,gCACE;AAAA,mCAAcA,OAAO,CAACW,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,+BAAW,GAAEX,OAAO,CAACY,GAAI,MAAKZ,OAAO,CAACa,KAAM,IAAGb,OAAO,CAACc,IAAK,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,sCAAiBd,OAAO,CAACe,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,kCAAaf,OAAO,CAACgB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,kCAAahB,OAAO,CAACT,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA3CD;;AA6CA,eAAeF,OAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport Layout from \"../../components/Layout\";\nimport { CountryContext } from \"../../context/CountryContext\";\n\nconst Results = () => {\n  const router = useRouter();\n  const country = useContext(CountryContext);\n  const [state, setState] = useState([]);\n\n  fetch(\"http://localhost:1337/hostings\")\n    .then((res) => res.json())\n    .then((data) =>\n      setState(\n        data.filter(\n          (hosting) =>\n            hosting.country.toLowerCase() === country.country.toLowerCase()\n        )\n      )\n    )\n    .catch((err) => console.log(err));\n\n  useEffect(() => {\n    if (state !== null && state.length === 0) {\n      alert(`No beach cleanups found for ${country.country}`);\n      router.push(\"/\");\n    }\n  }, [state]);\n\n  return (\n    <React.Fragment>\n      <Layout>\n        {state === undefined ? (\n          <div>Loading...</div>\n        ) : (\n          state.map((hosting) => (\n            <div>\n              <p>Location: {hosting.location}</p>\n              <p>Date: {`${hosting.day}th ${hosting.month} ${hosting.year}`}</p>\n              <p>Description: {hosting.description}</p>\n              <p>Remarks: {hosting.remarks}</p>\n              <p>Country: {hosting.country}</p>\n            </div>\n          ))\n        )}\n      </Layout>\n    </React.Fragment>\n  );\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}