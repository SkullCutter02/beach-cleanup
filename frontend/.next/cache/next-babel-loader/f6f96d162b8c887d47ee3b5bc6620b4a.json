{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/beach-cleanup/frontend/pages/results/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport { CountryContext } from \"../../context/CountryContext\";\n\nvar Results = function Results() {\n  _s();\n\n  var router = useRouter();\n  var country = useContext(CountryContext);\n\n  var _useState = useState([]),\n      state = _useState[0],\n      setState = _useState[1];\n\n  fetch(\"http://localhost:1337/hostings\").then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return setState(data.filter(function (hosting) {\n      return hosting.country.toLowerCase() === country.country.toLowerCase();\n    }));\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n  useEffect(function () {\n    if (state.length === 0) {\n      alert(\"No beach cleanups found for \".concat(country.country));\n      router.push(\"/\");\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: state === undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, _this) : state.map(function (hosting) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", hosting.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", \"\".concat(hosting.day, \"th \").concat(hosting.month, \" \").concat(hosting.year)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", hosting.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Remarks: \", hosting.remarks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Country: \", hosting.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Results, \"AJ5/DIpctKo2bFkqJiJSyZQS3VU=\", false, function () {\n  return [useRouter];\n});\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/beach-cleanup/frontend/pages/results/index.js"],"names":["React","useContext","useState","useEffect","useRouter","Layout","CountryContext","Results","router","country","state","setState","fetch","then","res","json","data","filter","hosting","toLowerCase","err","console","log","length","alert","push","undefined","map","location","day","month","year","description","remarks"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,cAAT,QAA+B,8BAA/B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAMK,OAAO,GAAGR,UAAU,CAACK,cAAD,CAA1B;;AAFoB,kBAGMJ,QAAQ,CAAC,EAAD,CAHd;AAAA,MAGbQ,KAHa;AAAA,MAGNC,QAHM;;AAKpBC,EAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACQ,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GADR,EAEGF,IAFH,CAEQ,UAACG,IAAD;AAAA,WACJL,QAAQ,CACNK,IAAI,CAACC,MAAL,CACE,UAACC,OAAD;AAAA,aACEA,OAAO,CAACT,OAAR,CAAgBU,WAAhB,OAAkCV,OAAO,CAACA,OAAR,CAAgBU,WAAhB,EADpC;AAAA,KADF,CADM,CADJ;AAAA,GAFR,WAUS,UAACC,GAAD;AAAA,WAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,GAVT;AAYAjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIO,KAAK,CAACa,MAAN,KAAiB,CAArB,EAAwB;AACtBC,MAAAA,KAAK,uCAAgCf,OAAO,CAACA,OAAxC,EAAL;AACAD,MAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACD;AACF,GALQ,EAKN,CAACf,KAAD,CALM,CAAT;AAOA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,MAAD;AAAA,gBACGA,KAAK,KAAKgB,SAAV,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,GAGChB,KAAK,CAACiB,GAAN,CAAU,UAACT,OAAD;AAAA,4BACR;AAAA,kCACE;AAAA,qCAAcA,OAAO,CAACU,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA,2CAAaV,OAAO,CAACW,GAArB,gBAA8BX,OAAO,CAACY,KAAtC,cAA+CZ,OAAO,CAACa,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAA,wCAAiBb,OAAO,CAACc,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,eAIE;AAAA,oCAAad,OAAO,CAACe,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE;AAAA,oCAAaf,OAAO,CAACT,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADQ;AAAA,OAAV;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAmBD,CA3CD;;GAAMF,O;UACWH,S;;;KADXG,O;AA6CN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport Layout from \"../../components/Layout\";\nimport { CountryContext } from \"../../context/CountryContext\";\n\nconst Results = () => {\n  const router = useRouter();\n  const country = useContext(CountryContext);\n  const [state, setState] = useState([]);\n\n  fetch(\"http://localhost:1337/hostings\")\n    .then((res) => res.json())\n    .then((data) =>\n      setState(\n        data.filter(\n          (hosting) =>\n            hosting.country.toLowerCase() === country.country.toLowerCase()\n        )\n      )\n    )\n    .catch((err) => console.log(err));\n\n  useEffect(() => {\n    if (state.length === 0) {\n      alert(`No beach cleanups found for ${country.country}`);\n      router.push(\"/\");\n    }\n  }, [state]);\n\n  return (\n    <React.Fragment>\n      <Layout>\n        {state === undefined ? (\n          <div>Loading...</div>\n        ) : (\n          state.map((hosting) => (\n            <div>\n              <p>Location: {hosting.location}</p>\n              <p>Date: {`${hosting.day}th ${hosting.month} ${hosting.year}`}</p>\n              <p>Description: {hosting.description}</p>\n              <p>Remarks: {hosting.remarks}</p>\n              <p>Country: {hosting.country}</p>\n            </div>\n          ))\n        )}\n      </Layout>\n    </React.Fragment>\n  );\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}